openapi: "3.0.3"
info:
  title: Rates Api
  description: Handle the info about rates in platform
  version: "1.0.0"
tags:
  - name: rates
    description: Available operations for rates domain.
paths:
  /rates/{id}:
    get:
      summary: "GET rates/{id}"
      operationId: "getById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RateEntityDTO"
    delete:
      summary: "DELETE rates/{id}"
      operationId: "deleteRate"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Void"
    patch:
      summary: "PATCH rates/{id}"
      operationId: "updatePrice"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RatePriceDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /rates/new:
    post:
      summary: "POST rates/new"
      operationId: "createRate"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RateEntityNewDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RateEntityNewDTO"
  /rates/search:
    get:
      summary: "GET rates/search"
      operationId: "getRateByCriteria"
      parameters:
        - name: "brandId"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "productId"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "date"
          in: "query"
          required: true
          schema:
            type: "string"
            format: "date"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RateEntityDTO"
components:
  schemas:
    RateEntityDTO:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        brand:
          type: "integer"
          format: "int64"
        product:
          type: "integer"
          format: "int64"
        startDate:
          type: "string"
          format: "date"
        endDate:
          type: "string"
          format: "date"
        price:
          type: "number"
          format: "double"
        currencyCode:
          type: "string"
        symbol:
          type: "string"
    RateEntityNewDTO:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        brand:
          type: "integer"
          format: "int64"
        product:
          type: "integer"
          format: "int64"
        startDate:
          type: "string"
          format: "date"
        endDate:
          type: "string"
          format: "date"
        price:
          type: "integer"
          format: "int32"
        currencyCode:
          type: "string"
    Void:
      type: "object"
      properties: { }
    RatePriceDTO:
      type: "object"
      properties:
        price:
          type: "integer"
          format: "int32"